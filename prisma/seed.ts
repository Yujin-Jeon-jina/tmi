// prisma/seed.ts
import { PrismaClient, Prisma } from '@prisma/client';
import bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

type Role = 'teacher' | 'student';

async function main() {
  // 1) 카테고리 업서트 (학생→선생님 = role 'teacher', 선생님→학생 = role 'student')
  const categories: Array<{ role: Role; name: string; description: string }> = [
    // 학생 → 선생님 (role: 'teacher')
    { role: 'teacher', name: '수업 스타일 & 진행', description: '첫 수업, 진행 방식, 자료 활용 등' },
    { role: 'teacher', name: '평가 & 피드백', description: '성적 분석, 피드백 주기 등' },
    { role: 'teacher', name: '경력 & 전문성', description: '경력, 강점, 커리큘럼, 사례' },
    { role: 'teacher', name: '소통 & 규칙', description: '연락, 보강, 일정, 장비/네트워크' },
    { role: 'teacher', name: '취향 & TMI(라포)', description: '취미, 루틴, 슬럼프, 에피소드' },
    // 선생님 → 학생 (role: 'student')
    { role: 'student', name: '학습 습관 & 목표', description: '공부 시간, 루틴, 목표' },
    { role: 'student', name: '현재 실력 & 어려움', description: '취약 파트, 실수 패턴, 시간 관리' },
    { role: 'student', name: '수업 취향 & 환경', description: '설명 스타일, 숙제 양, 도구/앱' },
    { role: 'student', name: '동기부여 & 감정 관리', description: '멘탈, 보상, 피드백 선호' },
    { role: 'student', name: '취미 & 일상 TMI', description: '음악, 음식, 여가, 버킷리스트' },
  ];

  // Upsert categories
  const categoryUpserts = await Promise.all(
    categories.map((c) =>
      prisma.category.upsert({
        where: { role_name: { role: c.role, name: c.name } as any }, // requires @@unique([role, name], name: "role_name")
        update: { description: c.description },
        create: c,
      })
    )
  );

  const catMap = new Map<string, number>();
  for (const c of categoryUpserts) {
    catMap.set(`${c.role}:${c.name}`, c.id);
  }
  const cid = (role: Role, name: string) => {
    const found = catMap.get(`${role}:${name}`);
    if (!found) throw new Error(`Category not found: ${role} / ${name}`);
    return found;
  };

  // 2) 학생 → 선생님 질문 (teachers_questions)
  const tq = (name: string, q: string) => ({
    categoryId: cid('teacher', name),
    questionText: q,
    tone: 'student_style',
    isActive: true,
  });

  const teachersQuestions: Prisma.TeachersQuestionCreateManyInput[] = [
    // 수업 스타일 & 진행 (10)
    tq('수업 스타일 & 진행', '쌤, 첫 수업은 어떻게 진행하시나요?'),
    tq('수업 스타일 & 진행', '쌤, 개념설명이랑 문제풀이 비중은 보통 몇 대 몇인가요?'),
    tq('수업 스타일 & 진행', '쌤, 제 수준 파악은 어떤 방식으로 하세요?'),
    tq('수업 스타일 & 진행', '쌤, 숙제는 어느 정도 내주시는 편인가요?'),
    tq('수업 스타일 & 진행', '쌤, 오답노트는 필수로 하게 하시나요?'),
    tq('수업 스타일 & 진행', '쌤, 온라인(태블릿) 수업에서 집중을 위해 쓰는 팁이 있나요?'),
    tq('수업 스타일 & 진행', '쌤, 수업 자료는 직접 만든 걸 쓰시나요, 교재를 쓰시나요?'),
    tq('수업 스타일 & 진행', '쌤, 수업 속도는 제 이해도에 맞춰 조절해주시나요?'),
    tq('수업 스타일 & 진행', '쌤, 모르는 걸 여러 번 물어봐도 괜찮나요?'),
    tq('수업 스타일 & 진행', '쌤, 수업 녹화나 판서 공유 같은 복습 자료 제공되나요?'),

    // 평가 & 피드백 (10)
    tq('평가 & 피드백', '쌤, 실력 체크는 주간/월간으로 어떻게 하세요?'),
    tq('평가 & 피드백', '쌤, 피드백은 수업 중 즉시 해주시나요, 따로 정리해서 주시나요?'),
    tq('평가 & 피드백', '쌤, 목표 성적이 안 나오면 계획을 어떻게 바꾸시나요?'),
    tq('평가 & 피드백', '쌤, 시험 전에는 어떤 식으로 마무리 코칭하시나요?'),
    tq('평가 & 피드백', '쌤, 암기 vs 이해 중 어디에 더 힘을 주시나요?'),
    tq('평가 & 피드백', '쌤, 진도보다 기초가 부족하면 커리큘럼을 어떻게 조정하시나요?'),
    tq('평가 & 피드백', '쌤, 오답 분석은 어느 수준까지 깊게 들어가나요?'),
    tq('평가 & 피드백', '쌤, 학습 태도나 습관도 피드백해주시나요?'),
    tq('평가 & 피드백', '쌤, 부모님께는 진행상황을 어느 주기로 공유하시나요?'),
    tq('평가 & 피드백', '쌤, 성적 정체기 돌파를 위해 자주 쓰는 전략이 있나요?'),

    // 경력 & 전문성 (10)
    tq('경력 & 전문성', '쌤, 이 과목 가르치신 지 얼마나 되셨어요?'),
    tq('경력 & 전문성', '쌤, 그동안 맡은 학생들 성적 향상 사례가 있나요?'),
    tq('경력 & 전문성', '쌤, 시험 유형 변화에 어떻게 대응하세요?'),
    tq('경력 & 전문성', '쌤, 최근에 공부하신 참고서나 논문/자료가 있나요?'),
    tq('경력 & 전문성', '쌤, 내신/수능/모의고사 중 어떤 대비에 특히 강점이 있으세요?'),
    tq('경력 & 전문성', '쌤, 학습 부진 학생을 끌어올린 경험이 있나요?'),
    tq('경력 & 전문성', '쌤, 표준적인 커리큘럼이 있나요, 학생별로 1:1 맞춤인가요?'),
    tq('경력 & 전문성', '쌤, 문제를 고를 때 난이도는 어떻게 배합하시나요?'),
    tq('경력 & 전문성', '쌤, 목표 기간 내 성적 향상 가능성을 어떻게 진단하세요?'),
    tq('경력 & 전문성', '쌤, 멘탈 관리나 시험 불안도 지도해주시나요?'),

    // 소통 & 규칙 (10)
    tq('소통 & 규칙', '쌤, 수업 외 질문은 메신저로 해도 되나요? 응답 시간은요?'),
    tq('소통 & 규칙', '쌤, 지각이나 결석 시 보강 규칙이 있나요?'),
    tq('소통 & 규칙', '쌤, 과제 제출 마감은 어떻게 관리하시나요?'),
    tq('소통 & 규칙', '쌤, 일정 변경은 최소 며칠 전에 말씀드려야 하나요?'),
    tq('소통 & 규칙', '쌤, 장비/네트워크 문제 생기면 수업은 어떻게 처리하나요?'),
    tq('소통 & 규칙', '쌤, 목표/계획 문서를 함께 만들어주실 수 있나요?'),
    tq('소통 & 규칙', '쌤, 부모님과의 상담은 온라인으로 가능할까요?'),
    tq('소통 & 규칙', '쌤, 평가표나 리포트를 정기적으로 받을 수 있나요?'),
    tq('소통 & 규칙', '쌤, 수업 중 켜야 하는 앱이나 도구가 정해져 있나요?'),
    tq('소통 & 규칙', '쌤, 시험 기간엔 수업 횟수나 길이 조정이 되나요?'),

    // 취향 & TMI(라포) (10)
    tq('취향 & TMI(라포)', '쌤, 학생 시절 공부 루틴은 어땠나요?'),
    tq('취향 & TMI(라포)', '쌤, 집중 안 될 때 본인만의 리셋 방법은 무엇인가요?'),
    tq('취향 & TMI(라포)', '쌤, 좋아하는 과목이랑 싫어하는 과목, 이유가 뭔가요?'),
    tq('취향 & TMI(라포)', '쌤, 최근에 꽂힌 취미가 있나요?'),
    tq('취향 & TMI(라포)', '쌤, 시험 전날에 꼭 하는 루틴이 있나요?'),
    tq('취향 & TMI(라포)', '쌤, 인생에서 제일 도움 된 공부 습관 하나만 꼽자면요?'),
    tq('취향 & TMI(라포)', '쌤, 커피파예요? 차(tea)파예요? 공부할 때 뭐 드세요?'),
    tq('취향 & TMI(라포)', '쌤, 실패를 극복했던 경험 얘기해주실 수 있나요?'),
    tq('취향 & TMI(라포)', '쌤, 공부 슬럼프 올 때 저는 어떻게 하면 좋을까요?'),
    tq('취향 & TMI(라포)', '쌤, 학생들이 쌤 수업을 좋아하는 이유가 뭐라고 생각하세요?'),
  ];

  // 3) 선생님 → 학생 질문 (students_questions)
  const sq = (name: string, q: string) => ({
    categoryId: cid('student', name),
    questionText: q,
    tone: 'teacher_style',
    isActive: true,
  });

  const studentsQuestions: Prisma.StudentsQuestionCreateManyInput[] = [
    // 학습 습관 & 목표 (10)
    sq('학습 습관 & 목표', '목표가 뭐야? 이번 학기 "딱 이것만은" 이루고 싶은 거 알려줘! ✨'),
    sq('학습 습관 & 목표', '하루에 공부 몇 분~몇 시간 정도 꾸준히 가능해? ⏱️'),
    sq('학습 습관 & 목표', '공부 일정, 시간표로 관리하는 편이야 아니면 느낌 가는 대로 해? 📅'),
    sq('학습 습관 & 목표', '아침형이야 밤샘형이야? 너한테 제일 집중 잘 되는 시간 언제야? 🌙/🌞'),
    sq('학습 습관 & 목표', '공부 시작 버튼 누르는 너만의 루틴 있어? (플레이리스트, 간식 등) 🎧🍪'),
    sq('학습 습관 & 목표', '계획 세우면 보통 몇 % 정도 지키는 편이야? 솔직히 말해줘! ✅'),
    sq('학습 습관 & 목표', '단기 목표(2주) vs 장기 목표(3개월), 뭐가 더 동기부여 돼? 🎯'),
    sq('학습 습관 & 목표', '스스로 칭찬/보상하는 방식 있어? 뭐 해줄 거야? 🏆'),
    sq('학습 습관 & 목표', '공부하다 막히면 누구한테/어떻게 도움 요청해? 🆘'),
    sq('학습 습관 & 목표', '이번 달 "절대 포기 안 할 습관" 하나 골라보자면 뭐야? 📌'),

    // 현재 실력 & 어려움 (10)
    sq('현재 실력 & 어려움', '최근 시험에서 제일 어렵던 파트가 뭐였어? 왜 어렵다고 느꼈어?'),
    sq('현재 실력 & 어려움', '개념은 아는데 문제에 못 쓰는 편이야, 아니면 개념부터 헷갈려?'),
    sq('현재 실력 & 어려움', '틀린 문제, 그냥 넘겨? 오답 정리하는 루틴 있어? 📝'),
    sq('현재 실력 & 어려움', '계산 실수/읽기 실수 자주 해? 어떤 패턴이 있어 보여?'),
    sq('현재 실력 & 어려움', '시간 부족으로 못 푸는 편이야, 긴장해서 실수하는 편이야? ⏳'),
    sq('현재 실력 & 어려움', '내신이랑 모고 중 어디가 더 힘들어? 이유도 알려줘!'),
    sq('현재 실력 & 어려움', '서술형 vs 객관식, 어떤 유형이 더 편해? ✍️'),
    sq('현재 실력 & 어려움', '개념 이해할 때 글, 그림, 예시 중 뭐가 제일 잘 먹혀? 📖🖼️'),
    sq('현재 실력 & 어려움', '최근에 "아 이건 드디어 이해했다!" 했던 개념 있어? 🙌'),
    sq('현재 실력 & 어려움', '반대로 여전히 안 잡히는 개념 1순위는 뭐야? 🔧'),

    // 수업 취향 & 환경 (10)
    sq('수업 취향 & 환경', '설명 길게 vs 짧게 포인트만, 뭐가 좋아?'),
    sq('수업 취향 & 환경', '문제 많이 풀기 vs 유형 핵심만 콕, 너의 스타일은?'),
    sq('수업 취향 & 환경', '숙제 양, 어느 정도가 딱 좋아? (가벼움/적당/탄탄) 📚'),
    sq('수업 취향 & 환경', '수업 중 카메라/마이크는 어떻게 하는 게 편해? 🎥🎙️'),
    sq('수업 취향 & 환경', '태블릿 필기 도구/앱 뭐 쓰고 있어? 공유해줄래? ✍️'),
    sq('수업 취향 & 환경', '배경 음악 틀고 공부해? 있으면 어떤 음악이 집중 잘 돼? 🎵'),
    sq('수업 취향 & 환경', '스터디 플래너/앱 써본 적 있어? 추천 있으면 알려줘!'),
    sq('수업 취향 & 환경', '1:1 질문 시간은 수업 중간 vs 끝, 언제가 좋아?'),
    sq('수업 취향 & 환경', '복습 자료는 요약 PDF, 문제 세트, 영상 중 뭐가 최애? 📄🧠🎬'),
    sq('수업 취향 & 환경', '시험 앞두고는 스파르타 모드 vs 안정 모드, 어느 쪽이 마음 편해? 🔥🧘'),

    // 동기부여 & 감정 관리 (10)
    sq('동기부여 & 감정 관리', '요즘 공부하기 싫을 때 가장 큰 이유, 한 단어로 꼽자면?'),
    sq('동기부여 & 감정 관리', '힘 빠질 때 기운 살려주는 말/행동 뭐가 있어? 💬'),
    sq('동기부여 & 감정 관리', '주변에서 "잘한다" 소리 들었던 경험 떠오르는 거 있어? 그때 뭐가 달랐어?'),
    sq('동기부여 & 감정 관리', '실패했을 때, 조용히 혼자 정리 vs 같이 이야기, 뭐가 더 도움 돼?'),
    sq('동기부여 & 감정 관리', '부모님/친구와 공부 얘기하는 빈도는 어느 정도야?'),
    sq('동기부여 & 감정 관리', '목표가 흔들릴 때, 나(선생님)한테 어떤 도움을 기대해? 🧑‍🏫'),
    sq('동기부여 & 감정 관리', '보상으로 제일 행복한 건 먹는 거? 쉬는 거? 놀러가기? 🍰🛌🎮'),
    sq('동기부여 & 감정 관리', '시험 당일 컨디션 루틴 있어? (수면, 식사, 스트레칭) 😴🍎'),
    sq('동기부여 & 감정 관리', '칭찬/피드백은 바로바로 vs 모아서, 어떤 게 덜 부담돼?'),
    sq('동기부여 & 감정 관리', '진짜 힘들 땐 "오늘은 여기까지" 신호를 어떻게 보내줄래? 🛑'),

    // 취미 & 일상 TMI (10)
    sq('취미 & 일상 TMI', '요즘 최애 노래/가수 누구야? 플레이리스트 공유 가능? 🎵'),
    sq('취미 & 일상 TMI', '주말에 시간 나면 제일 먼저 하는 거 뭐야? 🎮🏀'),
    sq('취미 & 일상 TMI', '간식 성향 알려줘: 단짠단짠 vs 깔끔 담백? 🍫🥨'),
    sq('취미 & 일상 TMI', '운동하거나 몸 풀기 하는 루틴 있어? 추천 있으면 알려줘! 🏃'),
    sq('취미 & 일상 TMI', '학교에서 제일 재밌는 순간은 언제야?'),
    sq('취미 & 일상 TMI', '좋아하는 유튜브/틱톡 채널 있어? 공부 외에! ▶️'),
    sq('취미 & 일상 TMI', '책/영화/드라마 중 하나만 고른다면? 최근 인생작은? 📚🎬'),
    sq('취미 & 일상 TMI', '친구들이 너를 한 단어로 소개하면 뭐라고 할까?'),
    sq('취미 & 일상 TMI', '새로 해보고 싶은 취미 있어? 장비 욕심나는 거? 🎸📷'),
    sq('취미 & 일상 TMI', '올 한 해 "이건 꼭 해보고 싶다!" 버킷리스트 한 가지 말해줘 ✨'),
  ];

  // 4) 일괄 삽입
  const [tqRes, sqRes] = await Promise.all([
    prisma.teachersQuestion.createMany({ data: teachersQuestions }),
    prisma.studentsQuestion.createMany({ data: studentsQuestions }),
  ]);

  // 5) 기본 관리자 계정 생성 (admin / admin123)
  const hashedPassword = await bcrypt.hash('admin123', 10);
  await prisma.admin.upsert({
    where: { username: 'admin' },
    update: {},
    create: {
      username: 'admin',
      password: hashedPassword,
    },
  });

  console.log(`✅ Categories upserted: ${categoryUpserts.length}`);
  console.log(`✅ TeachersQuestions inserted: ${tqRes.count}`);
  console.log(`✅ StudentsQuestions inserted: ${sqRes.count}`);
  console.log('✅ Admin account created/updated');
}

main()
  .catch((e) => {
    console.error('❌ Seed failed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });